#!/bin/sh
[ -z "$1" ] && echo "Error: should be run by udhcpc" && exit 1

. /lib/functions.sh
. /lib/netifd/netifd-proto.sh
config_load network

set_classless_routes() {
	local max=128
	local type
	while [ -n "$1" -a -n "$2" -a $max -gt 0 ]; do
		proto_add_ipv4_route "${1%%/*}" "${1##*/}" "$2"
		max=$(($max-1))
		shift 2
	done
}

setup_interface () {
	local wifi0_GuestDisable=$(uci get wireless.wifi0_guest.disabled)
	local wifi1_GuestDisable=$(uci get wireless.wifi1_guest.disabled)
	local opmode0=$(uci get wireless.wifi0.opmode)
	local opmode1=$(uci get wireless.wifi1.opmode)

	# Trick netifd to accept new IP.
	if [ "$1" = "bound" ]; then
		ifconfig br-${INTERFACE} 0.0.0.0
		sleep 1
	fi

	proto_init_update "*" 1
	proto_add_ipv4_address "$ip" "${subnet:-255.255.255.0}"
	# TODO: apply $broadcast

	for i in $router; do
		proto_add_ipv4_route 0.0.0.0 0 "$i"
	done

	# CIDR STATIC ROUTES (rfc3442)
	[ -n "$staticroutes" ] && set_classless_routes $staticroutes
	[ -n "$msstaticroutes" ] && set_classless_routes $msstaticroutes

	for dns in $dns; do
		proto_add_dns_server "$dns"
	done
	for domain in $domain; do
		proto_add_dns_search "$domain"
	done
	proto_send_update "$INTERFACE"

	if [ -n "$IFACE6RD" -a -n "$ip6rd" ]; then
		local v4mask="${ip6rd%% *}"
		ip6rd="${ip6rd#* }"
		local ip6rdprefixlen="${ip6rd%% *}"
		ip6rd="${ip6rd#* }"
		local ip6rdprefix="${ip6rd%% *}"
		ip6rd="${ip6rd#* }"
		local ip6rdbr="${ip6rd%% *}"

uci -q batch <<-EOF >/dev/null
set network.$IFACE6RD.proto=6rd
set network.$IFACE6RD.auto=0
set network.$IFACE6RD.peeraddr=$ip6rdbr
set network.$IFACE6RD.ip4prefixlen=$v4mask
set network.$IFACE6RD.ip6prefix=$ip6rdprefix
set network.$IFACE6RD.ip6prefixlen=$ip6rdprefixlen
commit network
EOF

		ifdown "$IFACE6RD"
		/etc/init.d/network reload
		ifup "$IFACE6RD"
	fi

	if [ "$opmode0" == "ap" -a "$wifi0_GuestDisable" == "0" ] ||
		[ "$opmode1" == "ap" -a "$wifi1_GuestDisable" == "0"] ||
		[ "$opmode0" == "wds_ap" -a "$wifi0_GuestDisable" == "0" ] ||
		[ "$opmode1" == "wds_ap" -a "$wifi1_GuestDisable" == "0"]; then
			echo "udhcpc: call zeccaptive restart and /sbin/GuestNetwork" > /dev/ttyS0
		#********** Senao Network **********
		#  support traffic control
		#***********************************
		if [ -f "/etc/config/eccaptive" ]; then
			/etc/init.d/zeccaptive restart
		fi
		#***** end of traffic control ******

		# zeccaptive clear iptable, so it's necessary to call GuestNetwork after zeccaptive !!!!
		if [ -r /sbin/GuestNetwork ]; then
			/sbin/GuestNetwork
		fi

	fi

	# TODO
	# [ -n "$ntpsrv" ] && 	change_state network "$ifc" lease_ntpsrv "$ntpsrv"
	# [ -n "$timesvr" ] && 	change_state network "$ifc" lease_timesrv "$timesvr"
	# [ -n "$hostname" ] &&	change_state network "$ifc" lease_hostname "$hostname"
	# [ -n "$timezone" ] && 	change_state network "$ifc" lease_timezone "$timezone"
}

deconfig_interface() {
	proto_init_update "*" 0
	proto_send_update "$INTERFACE"
	# Set static IP when udhcpc can not get IP
	config_get ipaddr lan ipaddr
	ifconfig br-${INTERFACE} $ipaddr
}

case "$1" in
	deconfig)
		deconfig_interface
	;;
	renew|bound)
		setup_interface $1
	;;
esac

# user rules
[ -f /etc/udhcpc.user ] && . /etc/udhcpc.user

exit 0
